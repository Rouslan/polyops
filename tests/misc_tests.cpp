#include <vector>
#include <algorithm>

#define BOOST_UT_DISABLE_MODULE
#include "third_party/boost/ut.hpp"

#include "../include/poly_ops/poly_ops.hpp"


int main() {
    using namespace poly_ops;
    using namespace boost::ut;

    "Test decomposition"_test = [] {
        std::vector<std::vector<poly_ops::point_t<int>>> loops{{
            {280,220},
            {249,215},
            {221,200},
            {199,178},
            {184,150},
            {180,119},
            {184,89},
            {199,61},
            {221,39},
            {249,24},
            {280,19},
            {310,24},
            {338,39},
            {360,61},
            {375,89},
            {380,119},
            {375,150},
            {360,178},
            {338,200},
            {310,215},
        },{
            {120,380},
            {89,375},
            {61,360},
            {39,338},
            {24,310},
            {19,280},
            {24,249},
            {39,221},
            {61,199},
            {89,184},
            {120,179},
            {150,184},
            {178,199},
            {200,221},
            {215,249},
            {220,280},
            {215,310},
            {200,338},
            {178,360},
            {150,375},
        },{
            {240,300},
            {209,295},
            {181,280},
            {159,258},
            {144,230},
            {140,200},
            {144,169},
            {159,141},
            {181,119},
            {209,104},
            {240,99},
            {270,104},
            {298,119},
            {320,141},
            {335,169},
            {340,200},
            {335,230},
            {320,258},
            {298,280},
            {270,295},
        },{
            {200,340},
            {169,335},
            {141,320},
            {119,298},
            {104,270},
            {99,240},
            {104,209},
            {119,181},
            {141,159},
            {169,144},
            {200,139},
            {230,144},
            {258,159},
            {280,181},
            {295,209},
            {300,240},
            {295,270},
            {280,298},
            {258,320},
            {230,335},
        },{
            {200,260},
            {169,255},
            {141,240},
            {119,218},
            {104,190},
            {99,160},
            {104,129},
            {119,101},
            {141,79},
            {169,64},
            {200,59},
            {230,64},
            {258,79},
            {280,101},
            {295,129},
            {300,160},
            {295,190},
            {280,218},
            {258,240},
            {230,255}}};

        /* This shape should decompose into exactly 10 shapes and 0 holes */
        auto out = poly_ops::normalize_op<true,int>(loops);
        expect(out.size() == 10);
        expect(std::ranges::all_of(out,[](auto loop) { return loop.inner_loops().size() == 0; }));
    };

    return 0;
}
